package action;

import game.CustomWorld;

import com.orbischallenge.ctz.objects.Pickup;
import com.orbischallenge.ctz.objects.enums.PickupType;

public class OtherAction extends Action{

	public OtherAction(String name_) {
		super(name_);
	}

	@Override
	public void EvaluateScore() {
		System.out.println("  Movement: " + this.name);
		
		try {
			score = 0;

			if(this.name == "PickupObject") {
				score += EvaluatePickupObjectOrStop();
				System.out.println("    EvaluatePickupObjectOrStop: " + score);
			}
			if(this.name == "ActivateShield") {
				score += EvaluateActivateShield();
				System.out.println("    EvaluateActivateShield: " + score);	
			}

			System.out.println("    Total Score: " + score);
			
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
	
	public float EvaluatePickupObjectOrStop() throws Exception {
		Pickup pickUp = null;
		for(Pickup p : CustomWorld.world.getPickups()) {
			if(p.getPosition() == this.currentUnit.unit.getPosition())
				pickUp = p;
		}
		if(pickUp == null) throw new Exception("Attempted to pick up and failed");
		
		if(pickUp.getPickupType() == PickupType.SHIELD) {
			// Pick up if health is not critical
			int playerHealth = this.currentUnit.unit.getHealth();
			
 		}
		if(pickUp.getPickupType() == PickupType.SHIELD) {
			
		}
		
		
		return 0.0f;
	}
	
	public float EvaluateActivateShield() {
		return 0.0f;
	}
}
